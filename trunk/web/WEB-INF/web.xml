<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	version="2.4">

	<display-name>Google Feedserver</display-name>
	<description>Defines the filters and servlets required to run with Google Feedserver</description>

	<!-- Filter to authorize signed requests using OAuth
		<filter> <filter-name>OAuthFilter</filter-name>
		<filter-class>com.google.feedserver.filters.OAuthFilter</filter-class>
		<init-param> <param-name>KEY_MANAGER</param-name>
		<param-value>com.google.feedserver.filters.SimpleKeyMananger</param-value>
		</init-param>  </filter>

		<filter-mapping> <filter-name>OAuthFilter</filter-name>
		<url-pattern>/*</url-pattern> </filter-mapping>
	-->
	<!-- Filter to authorize signed requests using Google ClientLogin  
  <filter>     
      <filter-name>SignedRequestFilter</filter-name>
      <filter-class>com.google.feedserver.filters.SignedRequestFilter</filter-class>
   </filter>

    <filter-mapping> <filter-name>SignedRequestFilter</filter-name>
    <url-pattern>/*</url-pattern> </filter-mapping>
-->
   
    <!-- The filter to support cross-domain access -->
    <filter> <filter-name>XdServletFilter</filter-name>
    <filter-class>com.google.xdp.XdServletFilter</filter-class>
     </filter>

    <filter-mapping> <filter-name>XdServletFilter</filter-name>
    <url-pattern>/*</url-pattern> </filter-mapping>
    
    <filter> <filter-name>MethodOverrideServletFilter</filter-name>
    <filter-class>com.google.feedserver.server.servlet.MethodOverrideServletFilter</filter-class>
     </filter>

    <filter-mapping> <filter-name>MethodOverrideServletFilter</filter-name>
    <url-pattern>/*</url-pattern> </filter-mapping>
    
    <filter>     
      <filter-name>ServerURIFilter</filter-name>
      <filter-class>com.google.feedserver.filters.ServerURIFilter</filter-class>
   </filter>
   
    <filter-mapping> <filter-name>ServerURIFilter</filter-name>
    <url-pattern>/*</url-pattern> </filter-mapping>

  <!-- The initialization servlet to set the feed config store instance -->
	<servlet id="feedserverinit">
		<servlet-name>FeedServerInitializationServlet</servlet-name>
		<servlet-class>
			com.google.feedserver.server.servlet.FeedServerInitializationServlet</servlet-class>
		<init-param>
			<param-name>FEED_CONFIG_STORE_CLASS</param-name>
			<param-value>com.google.feedserver.samples.configstore.SampleFileSystemFeedConfigStore</param-value>
		</init-param>
		<init-param>
      <param-name>WRAPPER_MANAGER_CLASS</param-name>
      <param-value>com.google.feedserver.samples.manager.XmlWrapperManager</param-value>
    </init-param>
		<load-on-startup>0</load-on-startup>
	</servlet>
	

	<servlet id="abdera">
		<servlet-name>Abdera</servlet-name>
		<servlet-class>
			org.apache.abdera.protocol.server.servlet.AbderaServlet</servlet-class>
		<init-param>
			<param-name>org.apache.abdera.protocol.server.Provider</param-name>
			<param-value>com.google.feedserver.manager.FeedServerProvider</param-value>
		</init-param>
	</servlet>

	<servlet-mapping id="abdera-mapping">
		<servlet-name>Abdera</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>
	
	<!-- The servlet to authenticate and issue authorization tokens to be used with requests using Google ClientLogin 
	<servlet id="auth-servlet">
    <servlet-name>GetAuthTokenServlet</servlet-name>
    <servlet-class>
      com.google.feedserver.server.servlet.GetAuthTokenServlet</servlet-class>
  </servlet>

  <servlet-mapping id="auth-servlet-mapping">
    <servlet-name>GetAuthTokenServlet</servlet-name>
    <url-pattern>/accounts/ClientLogin</url-pattern>
  </servlet-mapping>
  -->
  
  <!-- The listener that will initialize token manager instance using GUICE 
  <listener>
    <listener-class>com.google.feedserver.server.servlet.GuiceServletContextListener</listener-class>
  </listener>
  -->

</web-app>
